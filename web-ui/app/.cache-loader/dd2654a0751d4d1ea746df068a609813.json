{"remainingRequest":"/home/tpemist/Desktop/dApp/web-ui/app/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/tpemist/Desktop/dApp/web-ui/app/node_modules/ts-loader/index.js??ref--4-2!/home/tpemist/Desktop/dApp/web-ui/app/app/service/voteHandler/index.ts","dependencies":[{"path":"/home/tpemist/Desktop/dApp/web-ui/app/app/service/voteHandler/index.ts","mtime":1544852848240},{"path":"/home/tpemist/Desktop/dApp/web-ui/app/node_modules/cache-loader/dist/cjs.js","mtime":1544843898153},{"path":"/home/tpemist/Desktop/dApp/web-ui/app/node_modules/thread-loader/dist/cjs.js","mtime":1544843902104},{"path":"/home/tpemist/Desktop/dApp/web-ui/app/node_modules/ts-loader/index.js","mtime":1544843902174}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { observable, computed } from 'mobx';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport { abi } from './constants';\nvar DEXON_TESTNET_ID = 238;\nvar WS_PROVIDER = function () {\n    return (window.location.hostname === 'localhost')\n        ? 'ws://testnet.dexon.org:8546'\n        : 'wss://ws-proxy.dexon.org';\n};\nvar INJECTED = window.dexon || window.ethereum;\nvar VoteHandler = /** @class */ (function () {\n    function VoteHandler() {\n        var _this = this;\n        this.initDone = false;\n        this.contractDataLoaded = false;\n        this.candidatesList = [];\n        this.candidateData = {};\n        this.electedPerson = {};\n        this.sponsorHistory = [];\n        this.refundHistory = [];\n        this.contractInit = debounce(function (address) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                try {\n                    this.contractWrite = new this.walletHandler.eth.Contract(abi, address);\n                    this.contractRead = new this.wsHandler.eth.Contract(abi, address);\n                    this.updateContractData();\n                    this.subscribeData();\n                }\n                catch (e) {\n                    alert(\"init failed: \" + e);\n                }\n                return [2 /*return*/];\n            });\n        }); }, 200);\n        this.subscriber = [];\n        this.updateContractData = throttle(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _a, round, isVoting, candidatesList, guaranteedDeposit, _i, candidatesList_1, addr, data, name, vote, candidateNumber;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.contractDataLoaded = false;\n                        return [4 /*yield*/, Promise.all([\n                                this.contractRead.methods.round().call(),\n                                this.contractRead.methods.isVoting().call(),\n                                this.contractRead.methods.getCandidatesList().call(),\n                                this.contractRead.methods.guaranteedDeposit().call(),\n                            ])];\n                    case 1:\n                        _a = _b.sent(), round = _a[0], isVoting = _a[1], candidatesList = _a[2], guaranteedDeposit = _a[3];\n                        this.isVoting = isVoting;\n                        this.round = round;\n                        this.candidatesList = candidatesList;\n                        this.guaranteedDeposit = guaranteedDeposit;\n                        _i = 0, candidatesList_1 = candidatesList;\n                        _b.label = 2;\n                    case 2:\n                        if (!(_i < candidatesList_1.length)) return [3 /*break*/, 5];\n                        addr = candidatesList_1[_i];\n                        return [4 /*yield*/, this.contractRead.methods.candidateData(round, addr).call()];\n                    case 3:\n                        data = _b.sent();\n                        name = data.name, vote = data.vote, candidateNumber = data.candidateNumber;\n                        this.candidateData[addr] = { name: name, vote: vote, candidateNumber: candidateNumber };\n                        _b.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 2];\n                    case 5:\n                        // console.log(isVoting, this.candidatesList, this.candidateData);\n                        this.contractDataLoaded = true;\n                        return [2 /*return*/];\n                }\n            });\n        }); }, 500);\n        this.deiToDex = function (amount) { return _this.web3.utils.fromWei(amount); };\n        this.dexToDei = function (amount) { return _this.web3.utils.toWei(amount); };\n        this.writeContract = function (method, params, value) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _a, walletAddr, e_1;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.contractWrite) return [3 /*break*/, 5];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, INJECTED.enable()];\n                    case 2:\n                        _b.sent();\n                        return [4 /*yield*/, this.getWalletAddress()];\n                    case 3:\n                        walletAddr = _b.sent();\n                        // console.log(walletAddr);\n                        (_a = this.contractWrite\n                            .methods)[method].apply(_a, params).send({ from: walletAddr, value: value || undefined })\n                            .on('confirmation', function () { })\n                            .on('receipt', function () {\n                            console.log(\"successfully performed [\" + method + \"]\");\n                        })\n                            .on('error', function () { return console.log('unexpected error'); });\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_1 = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.init = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var _a, netId;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, import(/* webpackChunkName: \"web3\" */ 'web3')];\n                    case 1:\n                        _a.web3 = _b.sent();\n                        if (!INJECTED) {\n                            alert('Please install DekuSan Wallet');\n                            return [2 /*return*/];\n                        }\n                        this.walletHandler = new this.web3.default(INJECTED);\n                        return [4 /*yield*/, this.getNetworkId()];\n                    case 2:\n                        netId = _b.sent();\n                        if ((netId !== DEXON_TESTNET_ID) &&\n                            (window.location.hostname !== 'localhost')) {\n                            alert('Please Select \"DEXON Testt Network\" in DekuSan wallet');\n                            return [2 /*return*/];\n                        }\n                        this.wsHandler = new this.web3.default(WS_PROVIDER());\n                        this.initDone = true;\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.getNetworkId = function () { return _this.walletHandler.eth.net.getId(); };\n        this.getWalletAddress = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var addr;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.walletHandler.eth.getAccounts()];\n                    case 1:\n                        addr = _a.sent();\n                        return [2 /*return*/, addr[0]];\n                }\n            });\n        }); };\n        this.electedPersonOnReceived = function (_a) {\n            var returnValues = _a.returnValues;\n            var candidate = returnValues.candidate, name = returnValues.name, round = returnValues.round, vote = returnValues.vote;\n            _this.electedPerson[round] = { candidate: candidate, name: name, vote: vote };\n        };\n        this.sponsorOnReceived = function (_a) {\n            var returnValues = _a.returnValues;\n            var candidate = returnValues.candidate, sponsor = returnValues.sponsor, round = returnValues.round, amount = returnValues.amount, name = returnValues.name;\n            _this.sponsorHistory.push({ candidate: candidate, sponsor: sponsor, round: round, amount: amount, name: name });\n        };\n        this.refundOnReceived = function (_a) {\n            var returnValues = _a.returnValues;\n            console.log('refund', returnValues);\n            var candidate = returnValues.candidate, round = returnValues.round, amount = returnValues.amount, name = returnValues.name;\n            _this.refundHistory.push({ candidate: candidate, round: round, amount: amount, name: name });\n        };\n        this.init();\n    }\n    Object.defineProperty(VoteHandler.prototype, \"guaranteeDepositInDex\", {\n        get: function () {\n            return this.guaranteedDeposit && this.web3.utils.fromWei(this.guaranteedDeposit);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VoteHandler.prototype.startVoting = function () {\n        this.writeContract('startVoting', []);\n    };\n    VoteHandler.prototype.resetElection = function () {\n        this.writeContract('resetElection', []);\n    };\n    VoteHandler.prototype.vote = function (address) {\n        this.writeContract('vote', [address]);\n    };\n    VoteHandler.prototype.register = function (name) {\n        this.writeContract('register', [name], this.guaranteedDeposit);\n    };\n    VoteHandler.prototype.sponsorCandidate = function (address, amount) {\n        this.writeContract('sponsor', [address], this.dexToDei(amount));\n    };\n    VoteHandler.prototype.subscribeData = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var pastElectedPerson, pastSponsorHistory, pastRefundHistory;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.unsubscribeAndClearAll();\n                        return [4 /*yield*/, this.contractRead.getPastEvents('elected', { fromBlock: 0, toBlock: 'latest' })];\n                    case 1:\n                        pastElectedPerson = _a.sent();\n                        pastElectedPerson.forEach(this.electedPersonOnReceived);\n                        return [4 /*yield*/, this.contractRead.getPastEvents('sponsorCandidate', { fromBlock: 0, toBlock: 'latest' })];\n                    case 2:\n                        pastSponsorHistory = _a.sent();\n                        pastSponsorHistory.forEach(this.sponsorOnReceived);\n                        return [4 /*yield*/, this.contractRead.getPastEvents('refund', { fromBlock: 0, toBlock: 'latest' })];\n                    case 3:\n                        pastRefundHistory = _a.sent();\n                        pastRefundHistory.forEach(this.refundOnReceived);\n                        this.handleSubscribe('voteStart', function () {\n                            _this.updateContractData();\n                        });\n                        this.handleSubscribe('registered', function () {\n                            _this.updateContractData();\n                        });\n                        this.handleSubscribe('elected', this.electedPersonOnReceived);\n                        this.handleSubscribe('sponsorCandidate', this.sponsorOnReceived);\n                        this.handleSubscribe('refund', this.refundOnReceived);\n                        this.handleSubscribe('reset', function () {\n                            _this.updateContractData();\n                        });\n                        this.handleSubscribe('voteCandidate', function () {\n                            _this.updateContractData();\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    VoteHandler.prototype.handleSubscribe = function (eventName, cb) {\n        var subscriber = this.contractRead.events[eventName]({}, function (err) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            if (!err) {\n                cb.apply(void 0, args);\n            }\n        });\n        this.subscriber.push(subscriber);\n    };\n    VoteHandler.prototype.unsubscribeAndClearAll = function () {\n        this.electedPerson = {};\n        this.sponsorHistory = [];\n        this.refundHistory = [];\n        this.subscriber.forEach(function (sub) { return sub.unsubscribe && sub.unsubscribe(); });\n        this.subscriber = [];\n    };\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"initDone\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"contractDataLoaded\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"isVoting\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"round\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"guaranteedDeposit\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"candidatesList\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"candidateData\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"electedPerson\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"sponsorHistory\", void 0);\n    tslib_1.__decorate([\n        observable\n    ], VoteHandler.prototype, \"refundHistory\", void 0);\n    tslib_1.__decorate([\n        computed\n    ], VoteHandler.prototype, \"guaranteeDepositInDex\", null);\n    return VoteHandler;\n}());\nvar voteService = new VoteHandler();\nexport default voteService;\n",{"version":3,"file":"/home/tpemist/Desktop/dApp/web-ui/app/app/service/voteHandler/index.ts","sourceRoot":"","sources":["/home/tpemist/Desktop/dApp/web-ui/app/app/service/voteHandler/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { observable, computed } from 'mobx';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport { abi } from './constants';\n\ndeclare global {\n  interface Window {\n      dexon : any;\n      ethereum : any;\n  }\n}\n\nconst DEXON_TESTNET_ID = 238;\nconst WS_PROVIDER = () => {\n  return (window.location.hostname === 'localhost')\n  ? 'ws://testnet.dexon.org:8546'\n  : 'wss://ws-proxy.dexon.org';\n};\n\nconst INJECTED = window.dexon || window.ethereum;\n\nclass VoteHandler {\n\n  public web3;\n  @observable public initDone : boolean = false;\n  @observable public contractDataLoaded : boolean = false;\n  @observable public isVoting : boolean;\n  @observable public round;\n  @observable public guaranteedDeposit : string;\n  @observable public candidatesList : Array<string> = [];\n  @observable public candidateData : {\n    [addr : string] : {\n      name : string,\n      vote : string,\n      candidateNumber : string,\n    }\n  } = {};\n  @observable public electedPerson : {\n    [round : string] : {\n      name : string,\n      vote : string,\n      candidate : string,\n    }\n  } = {};\n  @observable public sponsorHistory : Array<{\n    amount : string,\n    round : string,\n    candidate : string,\n    sponsor : string,\n    name : string,\n  }> = [];\n  @observable public refundHistory : Array<{\n    amount : string,\n    round : string,\n    candidate : string,\n    name : string,\n  }> = [];\n\n  public contractInit = debounce(async (address : string) => {\n    try {\n      this.contractWrite = new this.walletHandler.eth.Contract(abi, address);\n      this.contractRead = new this.wsHandler.eth.Contract(abi, address);\n      this.updateContractData();\n      this.subscribeData();\n    } catch(e) {\n      alert(`init failed: ${e}`);\n    }\n\n  }, 200);\n\n  @computed public get guaranteeDepositInDex() {\n    return this.guaranteedDeposit && this.web3.utils.fromWei(this.guaranteedDeposit);\n  }\n\n  private walletHandler; // DekuSan Wallet\n  private wsHandler; // WS provider\n\n  private contractWrite;\n  private contractRead;\n\n  private subscriber = [];\n\n  private updateContractData = throttle(async () => {\n    this.contractDataLoaded = false;\n    const [\n      round,\n      isVoting,\n      candidatesList,\n      guaranteedDeposit,\n    ] = await Promise.all([\n      this.contractRead.methods.round().call(),\n      this.contractRead.methods.isVoting().call(),\n      this.contractRead.methods.getCandidatesList().call(),\n      this.contractRead.methods.guaranteedDeposit().call(),\n    ]);\n    this.isVoting = isVoting;\n    this.round = round;\n    this.candidatesList = candidatesList;\n    this.guaranteedDeposit = guaranteedDeposit;\n    for (const addr of candidatesList) {\n      const data = await this.contractRead.methods.candidateData(round, addr).call();\n      const { name, vote, candidateNumber } = data;\n      this.candidateData[addr] = { name, vote, candidateNumber };\n    }\n    // console.log(isVoting, this.candidatesList, this.candidateData);\n    this.contractDataLoaded = true;\n  }, 500);\n\n  constructor() {\n    this.init();\n  }\n\n  public startVoting() {\n    this.writeContract('startVoting', []);\n  }\n  public resetElection() {\n    this.writeContract('resetElection', []);\n  }\n  public vote(address : string) {\n    this.writeContract('vote', [address]);\n  }\n  public register(name : string) {\n    this.writeContract('register', [name], this.guaranteedDeposit);\n  }\n  public sponsorCandidate(address : string, amount : string) {\n    this.writeContract('sponsor', [address], this.dexToDei(amount));\n  }\n\n  public deiToDex = (amount) => this.web3.utils.fromWei(amount);\n  public dexToDei = (amount) => this.web3.utils.toWei(amount);\n\n  private writeContract = async (\n    method : string, params : Array<any>, value? : string\n  ) => {\n    if (this.contractWrite) {\n      try {\n        await INJECTED.enable();\n        const walletAddr = await this.getWalletAddress();\n        // console.log(walletAddr);\n        this.contractWrite\n          .methods[method](...params)\n          .send({ from: walletAddr, value: value || undefined })\n          .on('confirmation', () => {})\n          .on('receipt', () => {\n            console.log(`successfully performed [${method}]`);\n          })\n          .on('error', () => console.log('unexpected error'));\n      } catch(e) {\n\n      }\n    }\n  }\n\n  private init = async () => {\n    this.web3 = await  import(/* webpackChunkName: \"web3\" */'web3');\n    if (!INJECTED) {\n      alert('Please install DekuSan Wallet');\n      return;\n    }\n    this.walletHandler = new this.web3.default(INJECTED);\n    const netId = await this.getNetworkId();\n    if (\n      (netId !== DEXON_TESTNET_ID) &&\n      (window.location.hostname !== 'localhost')\n    ) {\n      alert('Please Select \"DEXON Testt Network\" in DekuSan wallet');\n      return;\n    }\n    this.wsHandler = new this.web3.default(WS_PROVIDER());\n    this.initDone = true;\n\n    // setTimeout(() => this.contractInit('0x623718b15295934386bd7569f42027b911751861'), 500);\n  }\n\n  private getNetworkId = () => this.walletHandler.eth.net.getId();\n  private getWalletAddress = async () => {\n    const addr = await this.walletHandler.eth.getAccounts();\n    return addr[0];\n  }\n\n  private async subscribeData() {\n    this.unsubscribeAndClearAll();\n\n    const pastElectedPerson = await this.contractRead.getPastEvents('elected', { fromBlock: 0, toBlock: 'latest' });\n    pastElectedPerson.forEach(this.electedPersonOnReceived);\n\n    const pastSponsorHistory = await this.contractRead.getPastEvents('sponsorCandidate', { fromBlock: 0, toBlock: 'latest' });\n    pastSponsorHistory.forEach(this.sponsorOnReceived);\n\n    const pastRefundHistory = await this.contractRead.getPastEvents('refund', { fromBlock: 0, toBlock: 'latest' });\n    pastRefundHistory.forEach(this.refundOnReceived);\n\n    this.handleSubscribe('voteStart', () => {\n      this.updateContractData();\n    });\n    this.handleSubscribe('registered', () => {\n      this.updateContractData();\n    });\n    this.handleSubscribe('elected', this.electedPersonOnReceived);\n\n    this.handleSubscribe('sponsorCandidate', this.sponsorOnReceived);\n    this.handleSubscribe('refund', this.refundOnReceived);\n\n    this.handleSubscribe('reset', () => {\n      this.updateContractData();\n    });\n    this.handleSubscribe('voteCandidate', () => {\n      this.updateContractData();\n    });\n  }\n\n  private handleSubscribe(eventName : string, cb : (...args : Array<any>) => any) {\n    const subscriber = this.contractRead.events[eventName]({}, (err, ...args) => {\n      if (!err) {\n        cb(...args);\n      }\n    });\n    this.subscriber.push(subscriber);\n  }\n  private unsubscribeAndClearAll() {\n    this.electedPerson = {};\n    this.sponsorHistory = [];\n    this.refundHistory = [];\n    this.subscriber.forEach((sub) => sub.unsubscribe && sub.unsubscribe());\n    this.subscriber = [];\n  }\n  private electedPersonOnReceived = ({ returnValues }) => {\n    const { candidate, name, round, vote } = returnValues;\n    this.electedPerson[round] = { candidate, name, vote };\n  }\n  private sponsorOnReceived = ({ returnValues }) => {\n    const { candidate, sponsor, round, amount, name } = returnValues;\n    this.sponsorHistory.push({ candidate, sponsor, round, amount, name });\n  }\n\n  private refundOnReceived = ({ returnValues }) => {\n    console.log('refund', returnValues);\n    const { candidate, round, amount, name } = returnValues;\n    this.refundHistory.push({ candidate, round, amount, name });\n  }\n}\n\nconst voteService = new VoteHandler();\n\nexport default voteService;\n"]}]}