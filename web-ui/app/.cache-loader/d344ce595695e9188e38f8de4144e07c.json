{"remainingRequest":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/node_modules/ts-loader/index.js??ref--4-2!/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/app/component/Candidates/CandidateProfile.tsx","dependencies":[{"path":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/app/component/Candidates/CandidateProfile.tsx","mtime":1544842204340},{"path":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/node_modules/cache-loader/dist/cjs.js","mtime":1544843898153},{"path":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/node_modules/thread-loader/dist/cjs.js","mtime":1544843902104},{"path":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/node_modules/ts-loader/index.js","mtime":1544843902174}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport voteService from '@/service/voteHandler';\nvar Wrapper = styled.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n  margin: 10px 0px;\\n  padding: 20px;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  align-items: center;\\n\"], [\"\\n  display: flex;\\n  margin: 10px 0px;\\n  padding: 20px;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  align-items: center;\\n\"])));\nvar StyledBtn = styled.button(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n  margin: 0px 10px;\\n  padding: 5px 0px;\\n  color: violet;\\n  background-color: rgba(0, 0, 0, 0);\\n  border: 1px solid violet;\\n  border-radius: 10px;\\n  min-width: 100px;\\n  font-size: large;\\n  cursor: pointer;\\n  &:hover {\\n    background-color: rgba(255, 255, 255, 0.2);\\n  }\\n\"], [\"\\n  margin: 0px 10px;\\n  padding: 5px 0px;\\n  color: violet;\\n  background-color: rgba(0, 0, 0, 0);\\n  border: 1px solid violet;\\n  border-radius: 10px;\\n  min-width: 100px;\\n  font-size: large;\\n  cursor: pointer;\\n  &:hover {\\n    background-color: rgba(255, 255, 255, 0.2);\\n  }\\n\"])));\nvar TextArea = styled.div(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0px 20px;\\n  flex: 1;\\n\"], [\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0px 20px;\\n  flex: 1;\\n\"])));\nvar Name = styled.div(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject([\"\\n  font-size: large;\\n\"], [\"\\n  font-size: large;\\n\"])));\nvar Padding = styled.div(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject([\"\\n  flex: 1;\\n\"], [\"\\n  flex: 1;\\n\"])));\nvar Vote = styled.div(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n\"], [\"\\n  display: flex;\\n\"])));\nvar CandidateNumber = styled.div(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject([\"\\n  display: flex;\\n\"], [\"\\n  display: flex;\\n\"])));\nvar Address = styled.div(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject([\"\\n  font-size: xx-small;\\n  color: gray;\\n\"], [\"\\n  font-size: xx-small;\\n  color: gray;\\n\"])));\nvar Hint = styled.div(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject([\"\\n  color: violet;\\n  margin-right: 5px;\\n  width: 80px;\\n\"], [\"\\n  color: violet;\\n  margin-right: 5px;\\n  width: 80px;\\n\"])));\nvar ProfileImg = styled.img(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject([\"\\n  height: 45px;\\n  border-radius: 100%;\\n  background-color: rgba(238, 130, 238, 0.7);\\n\"], [\"\\n  height: 45px;\\n  border-radius: 100%;\\n  background-color: rgba(238, 130, 238, 0.7);\\n\"])));\nvar CandidatesProfile = /** @class */ (function (_super) {\n    tslib_1.__extends(CandidatesProfile, _super);\n    function CandidatesProfile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CandidatesProfile.prototype.render = function () {\n        var id = this.props.id;\n        var profile = voteService.candidateData[id];\n        // console.log(profile);\n        return (React.createElement(Wrapper, null, profile && (React.createElement(React.Fragment, null,\n            React.createElement(ProfileImg, { src: \"https://robohash.org/\" + id }),\n            React.createElement(TextArea, null,\n                React.createElement(Name, null, profile.name),\n                React.createElement(Address, null, this.processId(id))),\n            React.createElement(TextArea, null,\n                React.createElement(Vote, null,\n                    React.createElement(Hint, null, \"Votes: \"),\n                    profile.vote),\n                React.createElement(CandidateNumber, null,\n                    React.createElement(Hint, null, \"Number:\"),\n                    \" \",\n                    profile.candidateNumber)),\n            React.createElement(Padding, null),\n            React.createElement(StyledBtn, { onClick: function () {\n                    var amount = prompt(\"How much DEX do you want to sponsor candidate \" + profile.name + \"?\");\n                    voteService.sponsorCandidate(id, amount);\n                } }, \"Sponsor\"),\n            React.createElement(StyledBtn, { onClick: function () {\n                    voteService.vote(id);\n                } }, \"Vote\")))));\n    };\n    CandidatesProfile.prototype.processId = function (id) {\n        return id.substring(0, 20) + \"...\";\n    };\n    CandidatesProfile = tslib_1.__decorate([\n        observer\n    ], CandidatesProfile);\n    return CandidatesProfile;\n}(React.Component));\nexport default CandidatesProfile;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;\n",{"version":3,"file":"/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/app/component/Candidates/CandidateProfile.tsx","sourceRoot":"","sources":["/home/tpemist/Desktop/hackathon/dapp-workshop-20181201/app/app/component/Candidates/CandidateProfile.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,MAAM,MAAM,mBAAmB,CAAC;AACvC,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAEhD,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,+MAAA,oIAMzB,IAAA,CAAC;AACF,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,wWAAA,6RAa9B,IAAA,CAAC;AACF,IAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,8JAAA,mFAK1B,IAAA,CAAC;AACF,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,oGAAA,yBAEtB,IAAA,CAAC;AACF,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,2FAAA,gBAEzB,IAAA,CAAC;AACF,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,iGAAA,sBAEtB,IAAA,CAAC;AACF,IAAM,eAAe,GAAG,MAAM,CAAC,GAAG,iGAAA,sBAEjC,IAAA,CAAC;AACF,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,uHAAA,4CAGzB,IAAA,CAAC;AAEF,IAAM,IAAI,GAAG,MAAM,CAAC,GAAG,uIAAA,4DAItB,IAAA,CAAC;AAEF,IAAM,UAAU,GAAG,MAAM,CAAC,GAAG,yKAAA,4FAI5B,IAAA,CAAC;AAOF;IAAgC,6CAAsB;IAAtD;;IAgDA,CAAC;IA/CQ,kCAAM,GAAb;QACU,IAAA,kBAAE,CAAgB;QAC1B,IAAM,OAAO,GAAG,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAC9C,wBAAwB;QACxB,OAAO,CACL,oBAAC,OAAO,QACL,OAAO,IAAI,CACV;YACE,oBAAC,UAAU,IAAC,GAAG,EAAE,0BAAwB,EAAI,GAAI;YACjD,oBAAC,QAAQ;gBACP,oBAAC,IAAI,QAAE,OAAO,CAAC,IAAI,CAAQ;gBAC3B,oBAAC,OAAO,QAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAW,CAC9B;YACX,oBAAC,QAAQ;gBACL,oBAAC,IAAI;oBACH,oBAAC,IAAI,kBAAe;oBACnB,OAAO,CAAC,IAAI,CACR;gBACP,oBAAC,eAAe;oBACd,oBAAC,IAAI,kBAAe;;oBAAE,OAAO,CAAC,eAAe,CAC7B,CACX;YAEX,oBAAC,OAAO,OAAG;YACX,oBAAC,SAAS,IACR,OAAO,EAAE;oBACP,IAAM,MAAM,GAAG,MAAM,CAAC,mDAAiD,OAAO,CAAC,IAAI,MAAG,CAAC,CAAC;oBACxF,WAAW,CAAC,gBAAgB,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;gBAC3C,CAAC,cAGS;YACZ,oBAAC,SAAS,IACR,OAAO,EAAE;oBACP,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvB,CAAC,WAGS,CACX,CACJ,CACO,CACX,CAAC;IACJ,CAAC;IACO,qCAAS,GAAjB,UAAkB,EAAW;QAC3B,OAAU,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,QAAK,CAAC;IACrC,CAAC;IA/CG,iBAAiB;QADtB,QAAQ;OACH,iBAAiB,CAgDtB;IAAD,wBAAC;CAAA,AAhDD,CAAgC,KAAK,CAAC,SAAS,GAgD9C;AAED,eAAe,iBAAiB,CAAC","sourcesContent":["import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport voteService from '@/service/voteHandler';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 10px 0px;\n  padding: 20px;\n  background-color: rgba(255, 255, 255, 0.1);\n  align-items: center;\n`;\nconst StyledBtn = styled.button`\n  margin: 0px 10px;\n  padding: 5px 0px;\n  color: violet;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid violet;\n  border-radius: 10px;\n  min-width: 100px;\n  font-size: large;\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\nconst TextArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 20px;\n  flex: 1;\n`;\nconst Name = styled.div`\n  font-size: large;\n`;\nconst Padding = styled.div`\n  flex: 1;\n`;\nconst Vote = styled.div`\n  display: flex;\n`;\nconst CandidateNumber = styled.div`\n  display: flex;\n`;\nconst Address = styled.div`\n  font-size: xx-small;\n  color: gray;\n`;\n\nconst Hint = styled.div`\n  color: violet;\n  margin-right: 5px;\n  width: 80px;\n`;\n\nconst ProfileImg = styled.img`\n  height: 45px;\n  border-radius: 100%;\n  background-color: rgba(238, 130, 238, 0.7);\n`;\n\ninterface Props {\n  id : string;\n}\n\n@observer\nclass CandidatesProfile extends React.Component<Props> {\n  public render() {\n    const { id } = this.props;\n    const profile = voteService.candidateData[id];\n    // console.log(profile);\n    return (\n      <Wrapper>\n        {profile && (\n          <>\n            <ProfileImg src={`https://robohash.org/${id}`} />\n            <TextArea>\n              <Name>{profile.name}</Name>\n              <Address>{this.processId(id)}</Address>\n            </TextArea>\n            <TextArea>\n                <Vote>\n                  <Hint>Votes: </Hint>\n                  {profile.vote}\n                </Vote>\n                <CandidateNumber>\n                  <Hint>Number:</Hint> {profile.candidateNumber}\n                </CandidateNumber>\n            </TextArea>\n\n            <Padding />\n            <StyledBtn\n              onClick={() => {\n                const amount = prompt(`How much DEX do you want to sponsor candidate ${profile.name}?`);\n                voteService.sponsorCandidate(id, amount);\n              }}\n            >\n              Sponsor\n            </StyledBtn>\n            <StyledBtn\n              onClick={() => {\n                voteService.vote(id);\n              }}\n            >\n              Vote\n            </StyledBtn>\n          </>\n        )}\n      </Wrapper>\n    );\n  }\n  private processId(id : string) : string {\n    return `${id.substring(0, 20)}...`;\n  }\n}\n\nexport default CandidatesProfile;\n"]}]}