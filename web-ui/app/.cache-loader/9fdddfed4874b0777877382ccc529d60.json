{"remainingRequest":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/node_modules/ts-loader/index.js??ref--4-2!/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/app/service/debug.ts","dependencies":[{"path":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/app/service/debug.ts","mtime":1544852867743},{"path":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/node_modules/cache-loader/dist/cjs.js","mtime":1544850953933},{"path":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/node_modules/thread-loader/dist/cjs.js","mtime":1544850960581},{"path":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/node_modules/ts-loader/index.js","mtime":1544850960674}],"contextDependencies":[],"result":["import round from 'lodash/round';\nvar DebugService = /** @class */ (function () {\n    function DebugService() {\n        var _this = this;\n        this.longtask = null;\n        this.paintPerformance = null;\n        if (PerformanceObserver) {\n            this.longtask = new PerformanceObserver(function (list) { return (list.getEntries().forEach(_this.displayLongTask)); });\n            this.longtask.observe({ entryTypes: ['longtask'] });\n            this.paintPerformance = new PerformanceObserver(function (list) { return (list.getEntries()).forEach(_this.displayPaintInfo); });\n            this.paintPerformance.observe({ entryTypes: ['paint'] });\n        }\n        else {\n            console.info('PerformanceObserver is not supporrted in this browser');\n        }\n    }\n    DebugService.prototype.displayLongTask = function (entry) {\n        console.log(\"Long Task detected. Execution time:\", round(entry.duration, 3));\n    };\n    DebugService.prototype.displayPaintInfo = function (entry) {\n        console.log(entry.name + \":\", round(entry.startTime, 3), 'ms');\n    };\n    return DebugService;\n}());\nvar debugService = new DebugService();\nexport { debugService };\n",{"version":3,"file":"/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/app/service/debug.ts","sourceRoot":"","sources":["/Users/ericwu/Desktop/Dexon/dApp/web-ui/app/app/service/debug.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,cAAc,CAAC;AAIjC;IAGI;QAAA,iBAUC;QAZO,aAAQ,GAAG,IAAI,CAAC;QAChB,qBAAgB,GAAG,IAAI,CAAC;QAE5B,IAAI,mBAAmB,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,EAAjD,CAAiD,CAAC,CAAC;YACrG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAEpD,IAAI,CAAC,gBAAgB,GAAG,IAAI,mBAAmB,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,gBAAgB,CAAC,EAAlD,CAAkD,CAAC,CAAC;YAC9G,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;SAC5D;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;SACzE;IACL,CAAC;IACO,sCAAe,GAAvB,UAAwB,KAAK;QAC3B,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IACO,uCAAgB,GAAxB,UAAyB,KAAK;QAC5B,OAAO,CAAC,GAAG,CAAI,KAAK,CAAC,IAAI,MAAG,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAEL,mBAAC;AAAD,CAAC,AArBD,IAqBC;AAED,IAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAExC,OAAO,EACH,YAAY,EACf,CAAC","sourcesContent":["import round from 'lodash/round';\n\ndeclare const PerformanceObserver : any; // Hopefully to remove it soon\n\nclass DebugService {\n    private longtask = null;\n    private paintPerformance = null;\n    constructor() {\n        if (PerformanceObserver) {\n            this.longtask = new PerformanceObserver((list) => (list.getEntries().forEach(this.displayLongTask)));\n            this.longtask.observe({ entryTypes: ['longtask'] });\n\n            this.paintPerformance = new PerformanceObserver((list) => (list.getEntries()).forEach(this.displayPaintInfo));\n            this.paintPerformance.observe({ entryTypes: ['paint'] });\n        } else {\n            console.info('PerformanceObserver is not supporrted in this browser');\n        }\n    }\n    private displayLongTask(entry) {\n      console.log(`Long Task detected. Execution time:`, round(entry.duration, 3));\n    }\n    private displayPaintInfo(entry) {\n      console.log(`${entry.name}:`, round(entry.startTime, 3), 'ms');\n    }\n\n}\n\nconst debugService = new DebugService();\n\nexport {\n    debugService\n};\n"]}]}